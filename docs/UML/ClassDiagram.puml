@startuml

!theme plain
top to bottom direction
skinparam linetype ortho

class BaseController {
  + BaseController():
  - mainController: MainController
  + getMainController(): MainController
  + init(): void
  + setMainController(MainController): void
}
entity Exercise << record >> {
  + Exercise(String, int, int, int, int):
  - sets: int
  - repMax: int
  - weight: int
  - name: String
  - repMin: int
  + repMax(): int
  + weight(): int
  + repMin(): int
  + name(): String
  + sets(): int
}
class ExerciseViewController {
  + ExerciseViewController():
  - sets: TextField
  - list: ListView<String>
  - repMin: TextField
  - repMax: TextField
  - cancelButton: Button
  - name: Text
  - weight: TextField
  - cancel(): void
  + init(): void
  - finish(): void
  - addExercise(): void
  + initialize(): void
  - clearInputFields(): void
}
class FxmlControllerPair {
  + FxmlControllerPair(MainController, VBox, BaseController):
  - baseController: BaseController
  - fxml: VBox
  + hide(): void
  + show(): void
}
class HomeController {
  + HomeController():
  - createNewWorkout(): void
  - showAllWorkouts(): void
  + init(): void
}
class MainController {
  + MainController():
  - exerciseView: VBox
  - overviewController: OverviewController
  - workoutViewController: WorkoutViewController
  - home: VBox
  - workoutView: VBox
  - exerciseViewController: ExerciseViewController
  - useRemote: boolean
  - overview: VBox
  - homeController: HomeController
  - fxmlControllerMap: Map<String, FxmlControllerPair>
  - user: UserAccess
  - currentFxmlName: String
  + showFxml(String): void
  - initialize(): void
  + getUser(): UserAccess
}
class OverviewController {
  + OverviewController():
  - name: Text
  - workoutInfoBox: HBox
  - inputName: TextField
  - scrollPane: ScrollPane
  - FONT_FAMILY: String
  - CONTENTSPACING: int
  - FONTSIZE: int
  - saveWorkoutNameBox: VBox
  - CONTENTMARGINBOTTOM: int
  - CONTENTMARGINLEFT: int
  + init(): void
  - buildGrid(): void
  + cancel(): void
  - addExercises(): void
  - delete(int): void
  - createCell(int): VBox
  - returnWorkoutView(): void
  - move(int, boolean): void
  + save(): void
}
class RemoteUserAccess {
  + RemoteUserAccess(URI):
  - objectMapper: ObjectMapper
  - baseUri: URI
  - OK_RESPONSE_CODE: int
  - LOGGER: Logger
  - httpPutRequest(String): HttpURLConnection
  + getCurrentWorkoutSaved(): boolean
  + setCurrentWorkout(int): void
  - handleError(HttpURLConnection): void
  + saveCurrentWorkout(String, String): void
  + removeExerciseFromCurrentWorkout(int): void
  + deleteUnsavedWorkouts(): void
  + moveExerciseInCurrentWorkout(int, boolean): void
  + removeWorkout(int): void
  - httpGetRequest(String): Reader
  + getCurrentWorkoutExerciseCount(): int
  + getCurrentWorkoutName(): String
  + getExerciseList(): List<String>
  + getWorkoutDates(): List<String>
  - httpDeleteRequest(String): HttpURLConnection
  + removeCurrentWorkout(): void
  + getCurrentWorkoutExerciseAttribute(int, String): String
  + getWorkoutNames(): List<String>
  + addExerciseToCurrentWorkout(String, int, int, int, int): void
}
class User {
  + User(boolean):
  - currentWorkoutIndex: int
  - workouts: List<Workout>
  - LOGGER: Logger
  - persistence: boolean
  + getCurrentWorkoutExerciseCount(): int
  + getCurrentWorkoutSaved(): boolean
  + removeCurrentWorkout(): void
  + getWorkoutNames(): List<String>
  + deleteUnsavedWorkouts(): void
  + getCurrentWorkoutExerciseAttribute(int, String): String
  + removeExerciseFromCurrentWorkout(int): void
  + moveExerciseInCurrentWorkout(int, boolean): void
  + saveCurrentWorkout(String, String): void
  + getExerciseList(): List<String>
  + addExerciseToCurrentWorkout(String, int, int, int, int): void
  + getCurrentWorkoutName(): String
  + setCurrentWorkout(int): void
  + getWorkoutDates(): List<String>
  + removeWorkout(int): void
}
interface UserAccess << interface >> {
  + moveExerciseInCurrentWorkout(int, boolean): void
  + deleteUnsavedWorkouts(): void
  + getCurrentWorkoutName(): String
  + addExerciseToCurrentWorkout(String, int, int, int, int): void
  + removeCurrentWorkout(): void
  + getCurrentWorkoutExerciseCount(): int
  + getWorkoutDates(): List<String>
  + removeExerciseFromCurrentWorkout(int): void
  + getWorkoutNames(): List<String>
  + removeWorkout(int): void
  + saveCurrentWorkout(String, String): void
  + getExerciseList(): List<String>
  + getCurrentWorkoutSaved(): boolean
  + setCurrentWorkout(int): void
  + getCurrentWorkoutExerciseAttribute(int, String): String
}
class UserController {
  + UserController():
  - user: User
  - LOGGER: Logger
  # WORKOUTPLANNER_SERVICE_PATH: String
  - objectMapper: ObjectMapper
  - logObjects: boolean
  + getWorkoutNames(): List<String>
  + deleteUnsavedWorkouts(): ResponseEntity<String>
  + getCurrentWorkoutExercise(int, String): String
  + getExerciseList(): List<String>
  + setCurrentWorkout(int): ResponseEntity<String>
  + getWorkoutDates(): List<String>
  + addExerciseToCurrentWorkout(String, int, int, int, int): ResponseEntity<String>
  - logEndpoint(String, Object): void
  + removeExerciseFromCurrentWorkout(int): ResponseEntity<String>
  + getCurrentWorkoutSaved(): boolean
  + removeCurrentWorkout(): ResponseEntity<String>
  + getCurrentWorkoutExerciseCount(): int
  + moveExerciseInCurrentWorkout(int, boolean): ResponseEntity<String>
  + removeWorkout(int): ResponseEntity<String>
  + saveCurrentWorkout(String, String): ResponseEntity<String>
  + getCurrentWorkoutName(): String
  - logEndpoint(String): void
}
class Workout {
  + Workout():
  - name: String
  - saved: boolean
  - exercises: List<Exercise>
  - date: String
  + moveExercise(int, boolean): void
  + setSaved(boolean): void
  + removeExercise(int): void
  + setName(String): void
  + getSaved(): boolean
  + addExercise(String, int, int, int, int): void
  + getName(): String
  + setDate(String): void
  + getDate(): String
  + getExercises(): List<Exercise>
}
class WorkoutViewController {
  + WorkoutViewController():
  - workoutNames: List<String>
  - LAYOUTY: int
  - SPACING: int
  - workoutDates: List<String>
  - FONT_FAMILY: String
  - scrollPane: ScrollPane
  - FONTSIZE: int
  - BUTTONLAYOUTY: double
  - createCell(int): VBox
  - view(int): void
  - delete(int): void
  - returnHome(): void
  + init(): void
}

BaseController             "1" *-[#595959,plain]-> "mainController\n1" MainController
ExerciseViewController      -[#000082,plain]-^  BaseController
FxmlControllerPair         "1" *-[#595959,plain]-> "baseController\n1" BaseController
HomeController              -[#000082,plain]-^  BaseController
MainController             "1" *-[#595959,plain]-> "exerciseViewController\n1" ExerciseViewController
MainController             "1" *-[#595959,plain]-> "fxmlControllerMap\n*" FxmlControllerPair
MainController             "1" *-[#595959,plain]-> "homeController\n1" HomeController
MainController             "1" *-[#595959,plain]-> "overviewController\n1" OverviewController
MainController             "1" *-[#595959,plain]-> "user\n1" UserAccess
MainController             "1" *-[#595959,plain]-> "workoutViewController\n1" WorkoutViewController
OverviewController          -[#000082,plain]-^  BaseController
RemoteUserAccess            -[#008200,dashed]-^  UserAccess
User                        -[#008200,dashed]-^  UserAccess
User                       "1" *-[#595959,plain]-> "workouts\n*" Workout
UserController             "1" *-[#595959,plain]-> "user\n1" User
Workout                    "1" *-[#595959,plain]-> "exercises\n*" Exercise
WorkoutViewController       -[#000082,plain]-^  BaseController
@enduml
